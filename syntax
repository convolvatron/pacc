(
  types:
  
  operators:
   (binary:(,   :(precedence: 15 associativity:left)
              !=:(precedence: 7 associativity:left)
              . :(precedence: 1 associativity:left)
              * :(precedence: 3 associativity:left)
              / :(precedence: 3 associativity:left)
              ^ :(precedence: 9 associativity:left)
              + :(precedence: 4 associativity:left)
              <=:(precedence: 6 associativity:left)
              ==:(precedence: 7 associativity:left)
              > :(precedence: 6 associativity:left)
              >=:(precedence: 6 associativity:left)
              | :(precedence: 10 associativity:left)
              ||:(precedence: 12 associativity:left)
              - :(precedence: 4 associativity: left) 
              ->:(precedence: 1 associativity:left)
              & :(precedence: 8 associativity: left)     
              &&:(precedence: 11 associativity:left) 
              % :(precedence: 3 associativity :left)     
              < :(precedence: 6 associativity :left)          
              -=:(precedence: 14 associativity:right)
              *=:(precedence: 14 associativity:right)
              /=:(precedence: 14 associativity:right)
              &=:(precedence: 14 associativity:right)
              %=:(precedence: 14 associativity:right)
              ^=:(precedence: 14 associativity:right)
              <<:(precedence: 5 associativity :right)
              = :(precedence: 14 associativity:right)
              >>:(precedence: 5 associativity :right)
              |=:(precedence: 14 associativity:right))

      postfix:( --: (precedence:1)
                ++: (precedence:1)
               \( : (precedence:1)
                [ : (precedence:1))

      prefix:( ! : (precedence:1)
               & : (precedence:1)
               ~ : (precedence:2)
               ++: (precedence:2)
               --: (precedence:2)
               * : (precedence:2))
               
      ternary:(\: : (precedence: 13)
               ? : (precedence:13)))

 {{sym(boolean),  1,   false},
                                                                     {sym(char),     8,   true},
                                                                    {sym(short),    16,  true},
                                                                  {sym(int),      32,  true},
                                                                  {sym(signed),   32,  true},
                                                                  {sym(unsigned), 32,  false},
                                                                  {sym(long),     64,  true},
                                                                  {sym(llong),    128, true},
                                                                  {sym(uchar),    8,   false},
                                                                  {sym(ushort),   16,  false},
                                                                  {sym(uint),     32,  false},
                                                                  {sym(ulong),    64,  false},
                                                                  {sym(ullong),   128, false}};
                                                                  